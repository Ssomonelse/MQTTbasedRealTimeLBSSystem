/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.20
 * Generated at: 2018-09-20 05:44:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/mqtt/WebServer_final/WebServer/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/WebServer/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1519644874033L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("\r\n");
      out.write("<title>DashBoard Page</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"icon\" href=\"logo.png\">\r\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"http://fonts.googleapis.com/earlyaccess/notosanskr.css\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"main1.js\"></script>\r\n");
      out.write("<!-- jQuery -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("<!-- bootstrap -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("<!-- <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"\r\n");
      out.write("   integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\"\r\n");
      out.write("   crossorigin=\"anonymous\"></script> -->\r\n");
      out.write("<!-- moment.js -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.js\"></script>\r\n");
      out.write("<!-- Chart.js -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js\"></script>\r\n");
      out.write("<!-- daterangepicker -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css\" />\r\n");
      out.write("<script>\r\n");
      out.write("var COLORS = [\r\n");
      out.write("\t   '#51574a', '#447c69','#74c493','#8e8c6d','#e4bf80',\r\n");
      out.write("\t   '#e9d78e','#F2F26F','#e2975d','#f19670','#e16552',\r\n");
      out.write("\t   '#c94a53','#be5168','#a34974','#993767','#65387d',\r\n");
      out.write("\t   '#4e2472','#9163b6','#e279a3','#e0598b','#7c9fb0',\r\n");
      out.write("\t   '#355C7D','#5698c4','#89C0ED','#9abf88','#95CFB7'\r\n");
      out.write("\t   ];\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   <div class=\"container-fluid\">\r\n");
      out.write("      <div class=\"row\">\r\n");
      out.write("         <nav class=\"col-md-2 d-none d-md-block bg-light sidebar\">\r\n");
      out.write("         <div class=\"sidebar-sticky\">\r\n");
      out.write("         <!-- title -->\r\n");
      out.write("            <table id=\"webTitle\">\r\n");
      out.write("               <tr>\r\n");
      out.write("                  <td><img src=\"logo.png\" width=\"50px\" height=\"50px\"/></td>\r\n");
      out.write("                  <td><a href=\"");
      if (_jspx_meth_c_005furl_005f2(_jspx_page_context))
        return;
      out.write("\" id=\"webTitle\">서울시 실시간 유동인구<br>통합메시징 시스템</a></td>\r\n");
      out.write("               </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("            \r\n");
      out.write("            <h6 class=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\r\n");
      out.write("               <span>Publish Msg to Clients</span>\r\n");
      out.write("            </h6>\r\n");
      out.write("            <ul class=\"nav flex-column\">\r\n");
      out.write("               <li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("                  href=\"");
      if (_jspx_meth_c_005furl_005f3(_jspx_page_context))
        return;
      out.write("\"> <span\r\n");
      out.write("                     data-feather=\"home\"></span> 실시간 유동인구\r\n");
      out.write("               </a></li>\r\n");
      out.write("   \r\n");
      out.write("               <li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("                  href=\"");
      if (_jspx_meth_c_005furl_005f4(_jspx_page_context))
        return;
      out.write("\"> <span\r\n");
      out.write("                     data-feather=\"home\"></span> 구 단위 메시지 보내기\r\n");
      out.write("               </a></li>\r\n");
      out.write("   \r\n");
      out.write("               <li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("                  href=\"");
      if (_jspx_meth_c_005furl_005f5(_jspx_page_context))
        return;
      out.write("\"> <span\r\n");
      out.write("                     data-feather=\"home\"></span> 동 단위 메시지 보내기\r\n");
      out.write("               </a></li>\r\n");
      out.write("   \r\n");
      out.write("               <li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("                  href=\"");
      if (_jspx_meth_c_005furl_005f6(_jspx_page_context))
        return;
      out.write("\"> <span\r\n");
      out.write("                     data-feather=\"users\"></span> 관리자 지정 구역 메시지 보내기 [사각형]\r\n");
      out.write("               </a></li>\r\n");
      out.write("   \r\n");
      out.write("               <li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("                  href=\"");
      if (_jspx_meth_c_005furl_005f7(_jspx_page_context))
        return;
      out.write("\"> <span\r\n");
      out.write("                     data-feather=\"users\"></span> 관리자 지정 구역 메시지 보내기 [원]\r\n");
      out.write("               </a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("   \r\n");
      out.write("            <h6 class=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\r\n");
      out.write("               <span>Retrieve LBS Data Report</span>\r\n");
      out.write("            </h6>\r\n");
      out.write("   \r\n");
      out.write("            <ul class=\"nav flex-column mb-2\">\r\n");
      out.write("               <li class=\"nav-item\"><a class=\"nav-link active\" href=\"");
      if (_jspx_meth_c_005furl_005f8(_jspx_page_context))
        return;
      out.write("\"> <span data-feather=\"bar-chart-2\"></span> DashBoard\r\n");
      out.write("               </a></li>\r\n");
      out.write("   \r\n");
      out.write("               <li class=\"nav-item\"><a class=\"nav-link\" href=\"");
      if (_jspx_meth_c_005furl_005f9(_jspx_page_context))
        return;
      out.write("\"> <span\r\n");
      out.write("\t\t\t\t\t\t\tdata-feather=\"layers\"></span> Tracking-Clients\r\n");
      out.write("\t\t\t\t\t</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("         </div>\r\n");
      out.write("         </nav>\r\n");
      out.write("   \r\n");
      out.write("         <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n");
      out.write("            <!-- <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n");
      out.write("              <h1 class=\"h2\">Dashboard</h1>\r\n");
      out.write("            </div> -->\r\n");
      out.write("            \r\n");
      out.write("            <table id=\"table1\" style=\"width:100%\">\r\n");
      out.write("               <tr>\r\n");
      out.write("                  <td><!-- real-time line chart -->\r\n");
      out.write("                  \t<div class=\"row\">\r\n");
      out.write("                    \t<div class=\"col-sm-4\"><h4>Real-time</h4></div>\r\n");
      out.write("                     \t<div class=\"col-sm-4\"></div>\r\n");
      out.write("                     \t<div class=\"col-sm-4\" style=\"text-align: right\"><button type=\"button\" class=\"btn btn-link\" onclick=\"onDistrictBtnClicked()\">Select District</button></div>\r\n");
      out.write("                  \t</div>\r\n");
      out.write("                  \t<div id=\"checkbox1\"></div>\r\n");
      out.write("                  \t<canvas id=\"districtLineChart\" width=\"200\" height=\"130\"></canvas>\r\n");
      out.write("                  \t<div id=\"legend1\" style=\"text-align: center\"></div>\r\n");
      out.write("                  </td>\r\n");
      out.write("                  <td><!-- one day pie chart -->\r\n");
      out.write("                    <div class=\"row\">\r\n");
      out.write("                     \t<div class=\"col-sm-4\"><h4>One day</h4></div>\r\n");
      out.write("                     \t<div class=\"col-sm-8\"><input type=\"text\" class=\"form-control\" name=\"date\" value=\"05/31/2018\" /></div>\r\n");
      out.write("                  \t</div>\r\n");
      out.write("                  \t<canvas id=\"districtPieChart\"></canvas>\r\n");
      out.write("               </td>\r\n");
      out.write("               </tr>\r\n");
      out.write("               <tr>\r\n");
      out.write("                  <td colspan='2'><!-- duration line chart -->\r\n");
      out.write("                     <div class=\"row\">\r\n");
      out.write("                     \t<div class=\"col-sm-3\"><h4>Duration</h4></div>\r\n");
      out.write("                     \t<div class=\"col-sm-3\"><input type=\"text\" class=\"form-control\" name=\"daterange\" value=\"05/23/2018 - 06/01/2018\" /></div>\r\n");
      out.write("                     \t<div class=\"col-sm-6\"></div>\r\n");
      out.write("                  \t</div>\r\n");
      out.write("                    <div id=\"checkbox2\"></div>\r\n");
      out.write("                    <canvas id=\"districtDurationLineChart\"></canvas>\r\n");
      out.write("                  </td>\r\n");
      out.write("               </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("         </main>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("   <!-- Icons -->\r\n");
      out.write("   <script src=\"https://unpkg.com/feather-icons/dist/feather.min.js\"></script>\r\n");
      out.write("   <script>\r\n");
      out.write("      feather.replace()\r\n");
      out.write("   </script>\r\n");
      out.write("   \r\n");
      out.write("   <script>\r\n");
      out.write("   var korNameData;\r\n");
      out.write("   var intervalArray = new Array(25);\r\n");
      out.write("   var datasets = [];\r\n");
      out.write("   //checkbox\r\n");
      out.write("   $.ajax({\r\n");
      out.write("      url : 'https://www.googleapis.com/fusiontables/v1/query?sql=SELECT SIG_ENG_NM, SIG_KOR_NM FROM 1z5lxrRhhii6yGgw6aLm8VYN8RxJLDqjiubddrLBl ORDER BY SIG_KOR_NM ASC&key=AIzaSyAm9yWCV7JPCTHCJut8whOjARd7pwROFDQ',\r\n");
      out.write("       success : function(data) {\r\n");
      out.write("         korNameData = data.rows;\r\n");
      out.write("         for (var i in korNameData) {\r\n");
      out.write("            //checkbox1\r\n");
      out.write("            $(\"#checkbox1\").append(\"<label class='checkbox-inline'><input type='checkbox' class='municipalities' onchange='check1Changed(this)' value='\"+ i +\"'>\"+ korNameData[i][1]+ \"</label>\");\r\n");
      out.write("            $(\"#legend1\").append(\"<span id='li\"+ i +\"' style='color:\"+ COLORS[i] +\"; display:none;'> &#9644;\"+ korNameData[i][1]+ \"</span>\");\r\n");
      out.write("            \r\n");
      out.write("            var obj = { label : korNameData[i][1], data : [], hidden:true, borderColor: COLORS[i], fill: false,};\r\n");
      out.write("            datasets.push(obj);\r\n");
      out.write("            //checkbox2\r\n");
      out.write("            $(\"#checkbox2\").append(\"<label class='checkbox-inline'><input type='radio' name='municipalities2' value='\"+ i +\"' checked>\"+ korNameData[i][1]+ \"</label>\");\r\n");
      out.write("            //line1\r\n");
      out.write("            config1.data.datasets.push(datasets[i]);\r\n");
      out.write("            //pie2\r\n");
      out.write("            config2.data.labels.push(korNameData[i][1]);\r\n");
      out.write("            config2.data.datasets[0].backgroundColor.push(COLORS[i]);\r\n");
      out.write("         }\r\n");
      out.write("         lineChartDistrict.update();\r\n");
      out.write("         pieChartDistrict.update();\r\n");
      out.write("      },\r\n");
      out.write("      error : function(data) {\r\n");
      out.write("         console.error([ 'error', data ]);\r\n");
      out.write("      }\r\n");
      out.write("   });\r\n");
      out.write("\r\n");
      out.write("   //-----------------------------------------------------------line chart1\r\n");
      out.write("   var ctx1 = document.getElementById(\"districtLineChart\");\r\n");
      out.write("   var config1 = {\r\n");
      out.write("      type: 'line',\r\n");
      out.write("       data: {\r\n");
      out.write("         labels: [],\r\n");
      out.write("         datasets: []\r\n");
      out.write("      },\r\n");
      out.write("      options: {\r\n");
      out.write("         title: {\r\n");
      out.write("            display: true,\r\n");
      out.write("            text: 'Real-time',\r\n");
      out.write("           },\r\n");
      out.write("           hover: {\r\n");
      out.write("               mode:'nearest'\r\n");
      out.write("           },\r\n");
      out.write("         scales: {\r\n");
      out.write("        \t yAxes: [{\r\n");
      out.write("        \t        ticks: {\r\n");
      out.write("        \t          beginAtZero: true,\r\n");
      out.write("        \t          callback: function(value) {if (value % 1 === 0) {return value;}}\r\n");
      out.write("        \t        }\r\n");
      out.write("        \t      }],\r\n");
      out.write("               xAxes: [{\r\n");
      out.write("                   type: \"time\",\r\n");
      out.write("                   time: {\r\n");
      out.write("                      format: \"YYYY/MM/DD HH:mm:ss a\",\r\n");
      out.write("                       //unit: 'minutes',\r\n");
      out.write("                       //unitStepSize: 0.5,\r\n");
      out.write("                  round: 'second',\r\n");
      out.write("                       tooltipFormat: \"YYYY/MM/DD HH:mm:ss a\",\r\n");
      out.write("                   }\r\n");
      out.write("            }]\r\n");
      out.write("         }\r\n");
      out.write("      }\r\n");
      out.write("   };\r\n");
      out.write("            \r\n");
      out.write("   Chart.defaults.global.legend.display = false;\r\n");
      out.write("   var lineChartDistrict = new Chart(ctx1, config1);\r\n");
      out.write("   function onDistrictBtnClicked(){\r\n");
      out.write("\t      var x = document.getElementById(\"checkbox1\");\r\n");
      out.write("\t       if (x.style.display === \"none\") {\r\n");
      out.write("\t           x.style.display = \"block\";\r\n");
      out.write("\t       } else {\r\n");
      out.write("\t           x.style.display = \"none\";\r\n");
      out.write("\t       }\r\n");
      out.write("\t}\r\n");
      out.write("   \r\n");
      out.write("   function check1Changed(checkbox) {\r\n");
      out.write("      if (checkbox.checked) {\r\n");
      out.write("         addDataset1(checkbox); \r\n");
      out.write("         document.getElementById(\"li\"+checkbox.value).style.display = \"inline\";\r\n");
      out.write("      } else {\r\n");
      out.write("         deleteDataset1(checkbox);\r\n");
      out.write("         document.getElementById(\"li\"+checkbox.value).style.display = \"none\";\r\n");
      out.write("      }\r\n");
      out.write("   }\r\n");
      out.write("         \r\n");
      out.write("   function addDataset1(checkbox){\r\n");
      out.write("      config1.data.datasets[checkbox.value].hidden = false;\r\n");
      out.write("            \r\n");
      out.write("      //var district = korNameData[checkbox.value][0];\r\n");
      out.write("      var district = korNameData[checkbox.value][0];\r\n");
      out.write("              \r\n");
      out.write("      intervalArray[checkbox.value] = setInterval(function(){\r\n");
      out.write("         $.ajax({\r\n");
      out.write("            url : \"http://\"+address+\":8080/WebServer/DataController?type=realtime&pubmsg=\" + district,\r\n");
      out.write("            success : function(data) {\r\n");
      out.write("               if(config1.data.datasets[checkbox.value].data.length > 10){\r\n");
      out.write("                  config1.data.datasets[checkbox.value].data.shift();\r\n");
      out.write("               }\r\n");
      out.write("               if(config1.data.labels.length > 10){\r\n");
      out.write("                  config1.data.labels.shift();\r\n");
      out.write("               }\r\n");
      out.write("               config1.data.labels.push(moment());\r\n");
      out.write("               config1.data.datasets[checkbox.value].data.push({\r\n");
      out.write("                  x: moment(),\r\n");
      out.write("                  y: data,\r\n");
      out.write("               });\r\n");
      out.write("               lineChartDistrict.update();\r\n");
      out.write("               console.log(config1.data.datasets[checkbox.value].label+\":\"+data);\r\n");
      out.write("            },\r\n");
      out.write("               error : function(data) {\r\n");
      out.write("               console.error([ 'error', data ]);\r\n");
      out.write("            }\r\n");
      out.write("         });\r\n");
      out.write("      }, 1000);\r\n");
      out.write("      lineChartDistrict.update();\r\n");
      out.write("   } \r\n");
      out.write("   \r\n");
      out.write("   function deleteDataset1(checkbox){\r\n");
      out.write("      config1.data.datasets[checkbox.value].hidden = true;\r\n");
      out.write("      config1.data.datasets[checkbox.value].data = [];\r\n");
      out.write("      if(isEmtyCheck())\r\n");
      out.write("         config1.data.labels=[];\r\n");
      out.write("      lineChartDistrict.update();\r\n");
      out.write("      clearInterval(intervalArray[checkbox.value]);\r\n");
      out.write("   }\r\n");
      out.write("         \r\n");
      out.write("   function isEmtyCheck(){\r\n");
      out.write("      for(var i=0; i<korNameData.length; i++){\r\n");
      out.write("         if(config1.data.datasets[i].hidden == false)\r\n");
      out.write("      return false;\r\n");
      out.write("      }\r\n");
      out.write("      return true;\r\n");
      out.write("   }\r\n");
      out.write("         \r\n");
      out.write("   //-----------------------------------------------------------pie chart1\r\n");
      out.write("   $(function() {\r\n");
      out.write("      $('input[name=\"date\"]').daterangepicker({\r\n");
      out.write("          singleDatePicker: true,\r\n");
      out.write("          showDropdowns: true,\r\n");
      out.write("      }, function(start, end, label) {\r\n");
      out.write("         //console.log(moment(start).format('YYYYMMDD'));\r\n");
      out.write("         onPieDateClicked(moment(start).format('YYYYMMDD'));\r\n");
      out.write("      });\r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("   var ctx2 = document.getElementById('districtPieChart').getContext('2d');\r\n");
      out.write("   var config2 = {\r\n");
      out.write("      type: 'pie',\r\n");
      out.write("      data: {\r\n");
      out.write("         datasets: [{\r\n");
      out.write("            data: [],\r\n");
      out.write("            backgroundColor: [],\r\n");
      out.write("            label: 'Dataset 1'\r\n");
      out.write("         }],\r\n");
      out.write("            labels: []\r\n");
      out.write("      },\r\n");
      out.write("      options: {\r\n");
      out.write("         responsive: true\r\n");
      out.write("      }\r\n");
      out.write("   };\r\n");
      out.write("         \r\n");
      out.write("   var pieChartDistrict = new Chart(ctx2, config2);\r\n");
      out.write("   //onPieDateClicked(\"20180509\")\r\n");
      out.write("   function onPieDateClicked(date) {\r\n");
      out.write("      \r\n");
      out.write("      //var msg = moment().format('YYYYMMDD');\r\n");
      out.write("      $.ajax({\r\n");
      out.write("         url : \"http://\"+address+\":8080/WebServer/DataController?type=oneday&pubmsg=\" + date,\r\n");
      out.write("          success : function(data) {\r\n");
      out.write("            config2.data.datasets[0].data = [];\r\n");
      out.write("            config2.data.datasets[0].data = JSON.parse(data);\r\n");
      out.write("            pieChartDistrict.update();\r\n");
      out.write("         },\r\n");
      out.write("         error : function(data) {\r\n");
      out.write("            console.error([ 'error', data ]);\r\n");
      out.write("         }\r\n");
      out.write("      });\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   //-----------------------------------------------------------line chart3\r\n");
      out.write("   /*\r\n");
      out.write("   $(function() {\r\n");
      out.write("       $('input[name=\"daterange\"]').daterangepicker({\r\n");
      out.write("       }, function(start, end, label) {\r\n");
      out.write("            var startdate = start.format('YYYYMMDD');\r\n");
      out.write("            var enddate = end.format('YYYYMMDD');\r\n");
      out.write("            console.log(startdate+\" \"+enddate);\r\n");
      out.write("            var id = getRadioValue();\r\n");
      out.write("            if(id != -1)\r\n");
      out.write("            \taddDataset3(id, startdate, enddate);\r\n");
      out.write("       });\r\n");
      out.write("   });\r\n");
      out.write("   */\r\n");
      out.write("   \r\n");
      out.write("   $('input[name=\"daterange\"]').daterangepicker();\r\n");
      out.write("   $('input[name=\"daterange\"]').on('apply.daterangepicker', function(ev, picker) {\r\n");
      out.write("\t   var start = picker.startDate.format('YYYYMMDD');\r\n");
      out.write("\t   var end = picker.endDate.format('YYYYMMDD');\r\n");
      out.write("\t   var id = getRadioValue();\r\n");
      out.write("\t   if(id != -1)\r\n");
      out.write("       \taddDataset3(id, start, end);\r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("   function getRadioValue(){\r\n");
      out.write("      var radios = document.getElementsByName('municipalities2');\r\n");
      out.write("      for (var i = 0, length = radios.length; i < length; i++)\r\n");
      out.write("      {\r\n");
      out.write("       if (radios[i].checked)\r\n");
      out.write("       {\r\n");
      out.write("         return radios[i].value;\r\n");
      out.write("       }\r\n");
      out.write("      }\r\n");
      out.write("      return -1;\r\n");
      out.write("   }\r\n");
      out.write("   var ctx3 = document.getElementById(\"districtDurationLineChart\");\r\n");
      out.write("   var config3 = {\r\n");
      out.write("      type: 'line',\r\n");
      out.write("       data: {\r\n");
      out.write("         labels: [],\r\n");
      out.write("         datasets: [{\r\n");
      out.write("             data: [],\r\n");
      out.write("             label: 'Dataset 1',\r\n");
      out.write("             borderColor: 'rgb(113, 91, 164)',\r\n");
      out.write("             backgroundColor: 'rgba(113, 91, 164, 0.2)',\r\n");
      out.write("          }],\r\n");
      out.write("      },\r\n");
      out.write("      options: {\r\n");
      out.write("         title: {\r\n");
      out.write("            display: true,\r\n");
      out.write("            text: 'Duration',\r\n");
      out.write("           },\r\n");
      out.write("           hover: {\r\n");
      out.write("               mode:'nearest'\r\n");
      out.write("           },\r\n");
      out.write("         scales: {\r\n");
      out.write("        \t yAxes: [{\r\n");
      out.write("        \t        ticks: {\r\n");
      out.write("        \t          beginAtZero: true,\r\n");
      out.write("        \t          //suggestedMax: 10,\r\n");
      out.write("        \t          callback: function(value) {if (value % 1 === 0) {return value;}}\r\n");
      out.write("        \t        }\r\n");
      out.write("        \t      }],\r\n");
      out.write("               xAxes: [{\r\n");
      out.write("                   type: \"time\",\r\n");
      out.write("                   time: {\r\n");
      out.write("                      format: \"YYYY/MM/DD HH:mm:ss a\",\r\n");
      out.write("                       //unit: 'minutes',\r\n");
      out.write("                       //unitStepSize: 0.5,\r\n");
      out.write("                  round: 'second',\r\n");
      out.write("                       tooltipFormat: \"YYYY/MM/DD HH:mm:ss a\",\r\n");
      out.write("                   }\r\n");
      out.write("            }]\r\n");
      out.write("         }\r\n");
      out.write("      }\r\n");
      out.write("   };\r\n");
      out.write("   \r\n");
      out.write("   var lineChartDurationDistrict = new Chart(ctx3, config3);\r\n");
      out.write("\r\n");
      out.write("   function addDataset3(id, startdate, enddate){\r\n");
      out.write("      \r\n");
      out.write("\t  var start = moment(startdate);\r\n");
      out.write("      var end = moment(enddate);\r\n");
      out.write("      var daysCount = end.diff(start, 'days') + 1;\r\n");
      out.write("      //console.log(daysCount);\r\n");
      out.write("      \r\n");
      out.write("      config3.data.labels = [];\r\n");
      out.write("      for(var i = 0; i < daysCount*2; i++ )\r\n");
      out.write("         config3.data.labels.push(moment(startdate).add(12*i,'hours').format(\"YYYY/MM/DD HH\"));\r\n");
      out.write("      //console.log(config3.data.labels);\r\n");
      out.write("      var msg = korNameData[id][0] + \",\" + startdate + \",\"+ enddate;\r\n");
      out.write("      //console.log(msg);\r\n");
      out.write("      console.log(\"hihi\");\r\n");
      out.write("      $.ajax({\r\n");
      out.write("         url : \"http://\"+address+\":8080/WebServer/DataController?type=duration&pubmsg=\" + msg,\r\n");
      out.write("          success : function(data) {\r\n");
      out.write("             config3.data.datasets[0].data = [];\r\n");
      out.write("             config3.data.datasets[0].data = JSON.parse(data);\r\n");
      out.write("             //console.log(msg);\r\n");
      out.write("             console.log(data);\r\n");
      out.write("            lineChartDurationDistrict.update();\r\n");
      out.write("         },\r\n");
      out.write("         error : function(data) {\r\n");
      out.write("            console.error([ 'error', data ]);\r\n");
      out.write("         }\r\n");
      out.write("      });\r\n");
      out.write("   }       \r\n");
      out.write("   </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /dashboard.jsp(13,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/resources/css/main.css");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /dashboard.jsp(14,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("/resources/css/dashboard.css");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f2_reused = false;
    try {
      _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f2.setParent(null);
      // /dashboard.jsp(52,31) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f2.setValue("/MainController?param=main");
      int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
      if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
      _jspx_th_c_005furl_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f2, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f3 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f3_reused = false;
    try {
      _jspx_th_c_005furl_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f3.setParent(null);
      // /dashboard.jsp(61,24) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f3.setValue("/MainController?param=main");
      int _jspx_eval_c_005furl_005f3 = _jspx_th_c_005furl_005f3.doStartTag();
      if (_jspx_th_c_005furl_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
      _jspx_th_c_005furl_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f3, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f4 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f4_reused = false;
    try {
      _jspx_th_c_005furl_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f4.setParent(null);
      // /dashboard.jsp(66,24) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f4.setValue("/MainController?param=district");
      int _jspx_eval_c_005furl_005f4 = _jspx_th_c_005furl_005f4.doStartTag();
      if (_jspx_th_c_005furl_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f4);
      _jspx_th_c_005furl_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f4, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f5 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f5_reused = false;
    try {
      _jspx_th_c_005furl_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f5.setParent(null);
      // /dashboard.jsp(71,24) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f5.setValue("/MainController?param=neighborhood");
      int _jspx_eval_c_005furl_005f5 = _jspx_th_c_005furl_005f5.doStartTag();
      if (_jspx_th_c_005furl_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f5);
      _jspx_th_c_005furl_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f5, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f6 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f6_reused = false;
    try {
      _jspx_th_c_005furl_005f6.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f6.setParent(null);
      // /dashboard.jsp(76,24) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f6.setValue("/MainController?param=rectangle");
      int _jspx_eval_c_005furl_005f6 = _jspx_th_c_005furl_005f6.doStartTag();
      if (_jspx_th_c_005furl_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f6);
      _jspx_th_c_005furl_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f6, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f7 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f7_reused = false;
    try {
      _jspx_th_c_005furl_005f7.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f7.setParent(null);
      // /dashboard.jsp(81,24) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f7.setValue("/MainController?param=circle");
      int _jspx_eval_c_005furl_005f7 = _jspx_th_c_005furl_005f7.doStartTag();
      if (_jspx_th_c_005furl_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f7);
      _jspx_th_c_005furl_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f7, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f8 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f8_reused = false;
    try {
      _jspx_th_c_005furl_005f8.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f8.setParent(null);
      // /dashboard.jsp(91,69) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f8.setValue("/MainController?param=dashboard");
      int _jspx_eval_c_005furl_005f8 = _jspx_th_c_005furl_005f8.doStartTag();
      if (_jspx_th_c_005furl_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f8);
      _jspx_th_c_005furl_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f8, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f9(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f9 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f9_reused = false;
    try {
      _jspx_th_c_005furl_005f9.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f9.setParent(null);
      // /dashboard.jsp(94,62) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f9.setValue("/MainController?param=tracking");
      int _jspx_eval_c_005furl_005f9 = _jspx_th_c_005furl_005f9.doStartTag();
      if (_jspx_th_c_005furl_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f9);
      _jspx_th_c_005furl_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f9, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f9_reused);
    }
    return false;
  }
}
